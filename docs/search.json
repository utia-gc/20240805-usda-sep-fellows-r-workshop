[
  {
    "objectID": "basic.html",
    "href": "basic.html",
    "title": "Basic Analysis",
    "section": "",
    "text": "This page introduces a brief, basic analysis of grass weights using R.\nThe workflow for a basic analysis consists of two main steps:\n\nPreparing the data — Raw data is read into R and processed into data that is in a format that we can analyze.\nAnalyzing the data — Data is visualized to create plots and tables, and a formal statistical analysis is performed.\n\nWe can visualize the steps of this workflow with a graph:\n\n\n\n\n\nflowchart TB\n    data_file[(\"Data file\")]\n    read_data[Read data\\ninto R]\n    wrangle_data[\"Clean/format\\ndata\"]\n    cleaned_data&gt;\"Analysis-ready\\ndata\"]\n\n    subgraph \"Prepare data\"\n        data_file --- read_data --- wrangle_data --&gt; cleaned_data\n    end\n  \n    viz_data[\"Visualize data\"]\n    visualizations&gt;\"Plots &\\ntables\"]\n    stat_ansys[\"Statistical analysis\"]\n    ansys_res&gt;\"Analysis results\"]\n    \n    subgraph \"Analyze data\"\n        cleaned_data --- viz_data --&gt; visualizations\n        cleaned_data --- stat_ansys --&gt; ansys_res\n    end\n\n\n\n\n\n\n\n\n\nThis section contains the first of the main steps laid out above: preparing the data for analysis.\nThe goal of this section is to take a raw data file and process it in R so that we have data available in our R session that we can directly use as input for our exploratory and formal data analysis.\n\n\n\nRead data\n\nThe process of loading data from a file, database, or other location meant for long term storage into a short-lived form that we work with in a program.\n\n\nI have made the raw data file in available online on a code and data hosting platform called GitHub at the following URL: https://github.com/utia-gc/20240805-usda-sep-fellows-r-workshop/raw/main/data/grasses.csv. By looking at the file name (grasses.csv) and checking the data ourselves, we can see that this file is in comma separated value (CSV) format.\n\n\n\n\n\n\nWarning\n\n\n\nUsing a file available on the internet is convenient for a task like this workshop. R can directly read certain types of files from the internet, so we don’t have to worry about downloading files, finding where they downloaded on everyone’s computer, and reading them in from the correct location.\nHowever, managing downloads and finding data on your computer is an important part of performing analysis on your own, and it can be tricky for beginners. I recommend that you develop a system for keeping track of all of your data files associated with each project. Personally, I prefer having different folders on my computer for each project, and inside of each project folder I have a data/ folder where I keep all of my data files. But that is just my preference, and you may prefer a different setup. What’s important is finding a way that works for you!\n\n\n\n# read grasses data as csv from URL\ngrasses &lt;- read.csv(\"https://github.com/utia-gc/20240805-usda-sep-fellows-r-workshop/raw/main/data/grasses.csv\")\n\n\n\n\n\nClean data\n\nThe act of transforming data from its current format into the structure needed for the intended analysis. This can also include data processing steps such as dropping or filling in missing values, computing new values from the data, etc.\n\n\nOur data is actually already in the format needed for our downstream analyses, so we won’t actually do any cleaning steps here. This is a good place to talk generally about data cleaning and how to check the data to make sure it’s in the structure that we need.\nTo start, we have to know what format we have, and what format we need. There is no “one size fits all” data structure that we need; different analyses require input data to be structured in different ways. A key part of working with data in R is knowing how to process data from the structure that you have into the structure that you need. This means you must work through tutorials and read the documentation for the analysis tools you work with.\nHowever, one general structure that is very common for analyzing data in R is the data.frame. This is the format of the data that we have read in, and it’s what many functions take as input data.\n\n\n\n\n\n\nVisualizing data in a data.frame\n\n\n\nThe most direct way to figure out how your data is structured is to simply look at it. When you’re interactively performing an analysis in RStudio, I recommend two simple ways of looking at your data by running the following in the Console pane:\n# show the contents of the data.frame directly in the Console\ngrasses\n\n# open an interactive view of the data.frame as a table\nView(grasses)"
  },
  {
    "objectID": "basic.html#introduction",
    "href": "basic.html#introduction",
    "title": "Basic Analysis",
    "section": "",
    "text": "This page introduces a brief, basic analysis of grass weights using R.\nThe workflow for a basic analysis consists of two main steps:\n\nPreparing the data — Raw data is read into R and processed into data that is in a format that we can analyze.\nAnalyzing the data — Data is visualized to create plots and tables, and a formal statistical analysis is performed.\n\nWe can visualize the steps of this workflow with a graph:\n\n\n\n\n\nflowchart TB\n    data_file[(\"Data file\")]\n    read_data[Read data\\ninto R]\n    wrangle_data[\"Clean/format\\ndata\"]\n    cleaned_data&gt;\"Analysis-ready\\ndata\"]\n\n    subgraph \"Prepare data\"\n        data_file --- read_data --- wrangle_data --&gt; cleaned_data\n    end\n  \n    viz_data[\"Visualize data\"]\n    visualizations&gt;\"Plots &\\ntables\"]\n    stat_ansys[\"Statistical analysis\"]\n    ansys_res&gt;\"Analysis results\"]\n    \n    subgraph \"Analyze data\"\n        cleaned_data --- viz_data --&gt; visualizations\n        cleaned_data --- stat_ansys --&gt; ansys_res\n    end"
  },
  {
    "objectID": "basic.html#prepare-data",
    "href": "basic.html#prepare-data",
    "title": "Basic Analysis",
    "section": "",
    "text": "This section contains the first of the main steps laid out above: preparing the data for analysis.\nThe goal of this section is to take a raw data file and process it in R so that we have data available in our R session that we can directly use as input for our exploratory and formal data analysis.\n\n\n\nRead data\n\nThe process of loading data from a file, database, or other location meant for long term storage into a short-lived form that we work with in a program.\n\n\nI have made the raw data file in available online on a code and data hosting platform called GitHub at the following URL: https://github.com/utia-gc/20240805-usda-sep-fellows-r-workshop/raw/main/data/grasses.csv. By looking at the file name (grasses.csv) and checking the data ourselves, we can see that this file is in comma separated value (CSV) format.\n\n\n\n\n\n\nWarning\n\n\n\nUsing a file available on the internet is convenient for a task like this workshop. R can directly read certain types of files from the internet, so we don’t have to worry about downloading files, finding where they downloaded on everyone’s computer, and reading them in from the correct location.\nHowever, managing downloads and finding data on your computer is an important part of performing analysis on your own, and it can be tricky for beginners. I recommend that you develop a system for keeping track of all of your data files associated with each project. Personally, I prefer having different folders on my computer for each project, and inside of each project folder I have a data/ folder where I keep all of my data files. But that is just my preference, and you may prefer a different setup. What’s important is finding a way that works for you!\n\n\n\n# read grasses data as csv from URL\ngrasses &lt;- read.csv(\"https://github.com/utia-gc/20240805-usda-sep-fellows-r-workshop/raw/main/data/grasses.csv\")\n\n\n\n\n\nClean data\n\nThe act of transforming data from its current format into the structure needed for the intended analysis. This can also include data processing steps such as dropping or filling in missing values, computing new values from the data, etc.\n\n\nOur data is actually already in the format needed for our downstream analyses, so we won’t actually do any cleaning steps here. This is a good place to talk generally about data cleaning and how to check the data to make sure it’s in the structure that we need.\nTo start, we have to know what format we have, and what format we need. There is no “one size fits all” data structure that we need; different analyses require input data to be structured in different ways. A key part of working with data in R is knowing how to process data from the structure that you have into the structure that you need. This means you must work through tutorials and read the documentation for the analysis tools you work with.\nHowever, one general structure that is very common for analyzing data in R is the data.frame. This is the format of the data that we have read in, and it’s what many functions take as input data.\n\n\n\n\n\n\nVisualizing data in a data.frame\n\n\n\nThe most direct way to figure out how your data is structured is to simply look at it. When you’re interactively performing an analysis in RStudio, I recommend two simple ways of looking at your data by running the following in the Console pane:\n# show the contents of the data.frame directly in the Console\ngrasses\n\n# open an interactive view of the data.frame as a table\nView(grasses)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "USDA SEP Fellows R Workshop",
    "section": "",
    "text": "USDA SEP Fellows R Workshop\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]